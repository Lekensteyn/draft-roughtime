<?xml version="1.0" encoding="US-ASCII"?> <!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"> <!ENTITY
RFC5280 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.5280.xml"> <!ENTITY
RFC5905 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.5905.xml"> <!ENTITY
RFC8174 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.8174.xml"> <!ENTITY
RFC7384 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.7384.xml"> ]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes"?>
<?rfc toc="no"?>
<?rfc tocdepth="3"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<rfc category="info" docName="draft-roughtime-aanchal-00" ipr="trust200902">
  <front>
    <title>Roughtime</title>

    <author fullname="Aanchal Malhotra" initials="A." surname="Malhotra">
        <organization>Boston University</organization>
        <address>
            <postal>
                <street>111 Cummington Mall</street>
                <city>Boston</city>
                <region></region>
                <code>02215</code>
                <country>USA</country>
            </postal>
            <email>aanchal4@bu.edu</email>
        </address>
    </author>

    <author fullname="Watson Ladd" initials="W." surname="Ladd">
        <organization> Cloudflare</organization>
        <address>
            <postal>
                <street>101 Townsend St</street>
                <city>San Francisco</city>
                <region></region>
                <country>USA</country>
            </postal>
            <email>watson@cloudflare.com</email>
        </address>
    </author>

    <date year="2019" month="February" day="1"/>

    <area>General</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <keyword>roughtime</keyword>

    <keyword>time synchronization</keyword>

    <abstract>
      <t>
        This document specifies roughtime - a protocol that aims to achieve rough time synchronisation in a secure way that doesn't depend on any particular time server, and in such a way that, if a time server does misbehave, clients end up with cryptographic proof of it.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>
      Roughtime is a protocol for rough time synchronization. To justify the need for roughtime, we would compare it to the existing approaches for time synchronization.  
      </t>
      <t>
      <list style = "bullet">
        <t> NTP </t>
        <t> Chronos </t>
        <t> MD5 NTP </t>
        <t> ANTP </t>
        <t> NTS </t>
        <t> Roughtime </t>
      </list>
    </t>
      <texttable anchor = "existing_approaches">
        <preamble> TBD </preamble>
        <ttcol align='center'>Protocol</ttcol>
   <ttcol align='center'>Network</ttcol>
   <ttcol align='center'>Unconditional Server</ttcol>
   <ttcol align='center'>Verified Server</ttcol>
   <ttcol align='center'>Attribution</ttcol>
   <c>NTP</c>
   <c>NTP</c><c>NTP</c><c>NTP</c><c>NTP</c>
   <c>Chronos</c><c>Chronos</c><c>Chronos</c><c>Chronos</c><c>Chronos</c>
   <c>NTP-MD5</c><c>NTP-MD5</c><c>NTP-MD5</c><c>NTP-MD5</c><c>NTP-MD5</c>
   <c>ANTP</c><c>ANTP</c><c>ANTP</c><c>ANTP</c><c>ANTP</c>
   <c>NTS</c><c>NTS</c><c>NTS</c><c>NTS</c><c>NTS</c>
   <c>Roughtime</c><c>Roughtime</c><c>Roughtime</c><c>Roughtime</c><c>Roughtime</c>
        <postamble>   TBD </postamble>
      </texttable>
    </section>
<section title = "Requirements Language">
  <t>
    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
      NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
      "MAY", and "OPTIONAL" in this document are to be interpreted as
      described in BCP 14 <xref target="RFC2119"></xref> <xref target="RFC8174"></xref> when, and only when, they appear in all capitals, as shown here.
  </t>
</section>
<section title = "Terminology">
  <t>
    TBD
  </t>
</section>
<section title = "Protocol Overview">
  <t>
    Single Server Mode: At its most basic level, Roughtime is a one round protocol in which a comletely fresh client requests the current time and the server sends a signed response. The response is comprised of a timestamp (the number of microseconds since the Unix epoch) and a radius (in microseconds) used to indicate the servers certainty about the reported time. For example, a radius of 1,000,000microsec means the server is reasonably sure that the true time is within one second of the reported time.
  </t>
  <t>
    The server proves freshness of its response as follows. The request consists of a short, random string commonly called a nonce. The server incorporates the nonce into its signed response so that its needed to verify the signature. If the nonce is sufficiently long (say, 16 bytes), then the number of possible nonces is so large that its extremely unlikely the server has encountered (or will ever encounter) a request with the same nonce. Thus, a valid signature serves as cryptographic proof that the response is fresh.
  </t>
  <t>
    The client uses the servers root public key to verify the signature. (The key is obtained out-of-band.) When the server starts, it generates an online public/secret key pair, the root secret key is used to create a delegation for the online public key, and the online secret key is used to sign the response. The delegation serves the same function as a traditional X.509 certificate on the web as illustrated in the figure below, the client first uses the root public key to verify the delegation, then uses the online public key to verify the response. This allows for operational separation of the delegator and the server and limits exposure of the root secret key.
    It knows that its authentic because it has a signature from the server. But if it doesnt completely trust the server it can ask another server for the time.
  </t>
  <t>
    Chaining multiple servers For the second request, the client generates its nonce by hashing the reply from the first server with a random value. This proves that the nonce was created after the reply from the first server. It sends that to the second server and receives a signature from it covering that nonce and the time from the second server. Let us assume that the times from the two servers are significantly different. 
  </t>
  <t>
    Cryptographic Proof of misbehavior If the time from the server second server is before the first, then the client has proof of misbehaviour: the reply from the second server implicitly shows that it was created later because of the way that the client constructed the nonce. If the time from the second server is after, then the client can contact the first server again and get a signature that was provably created afterwards, but with an earlier timestamp.
  </t>
  <t>
    With only two servers, the client can end up with proof that something is wrong, but no idea what the correct time is. But with half a dozen or more independent servers, the client will end up with chain of proof of any servers misbehaviour, signed by several others, and (presumably) enough accurate replies to establish what the correct time is.
  </t>
</section>
<section title = "Message Format">
  TBD
</section>


    <section title="Cloudflares Roughtime Service Implementation">
      <t>
      TBD
         
      </t>
    </section>
    

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>
        TBD
      </t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This memo includes no request to IANA.</t>
    </section>

    <section title = "Security Considerations">
      <t>
        TBD      
      </t>
    </section>
    <section title = "Privacy Considerations">
      <t>
        TBD      
      </t>
    </section>
  </middle>

  <back>
    <references title="Informative References">
      &RFC5280;
      &RFC5905;
      &RFC7384;
      &RFC8174;
      &RFC2119;

      <reference anchor="SECNTP" target="http://eprint.iacr.org/2016/1006">
        <front>
          <title>The Security of NTP's Datagram Protocol</title>

          <author initials="A." surname="Malhotra" fullname="A. Malhotra">
            <organization/>
          </author>
          <author initials="M. V." surname="Gundy" fullname="M. V. Gundy">
            <organization/>
          </author>
          <author initials="M." surname="Varia" fullname="M. Varia">
            <organization/>
          </author>
          <author initials="H." surname="Kennedy" fullname="H. Kennedy">
            <organization/>
          </author>
          <author initials="J." surname="Gardner" fullname="J. Gardner">
            <organization/>
          </author>
          <author initials="S." surname="Goldberg" fullname="S. Goldberg">
            <organization/>
          </author>
           <date year="2016"/>
          </front>
          </reference>

      <reference anchor="MCBG" target="https://eprint.iacr.org/2015/1020">
        <front>
            <title>Attacking the Network Time Protocol</title>

            <author initials="A." surname="Malhotra" fullname="A. Malhotra">
              <organization/>
            </author>
            <author initials="I." surname="Cohen" fullname="I. Cohen">
              <organization/>
            </author>
            <author initials="E." surname="Brakke" fullname="E. Brakke">
                <organization/>
            </author>
            <author initials="S." surname="Goldberg" fullname="S. Goldberg">
                <organization/>
            </author>

            <date year="2015"/>
        </front>
      </reference>
       <reference anchor="CLOCKDRIFT" target="http://downloads.hindawi.com/journals/jcnc/2008/583162.pdf">
        <front>
            <title>Internal clock drift estimation in computer clusters</title>

            <author initials="H." surname="Marouani" fullname="H. Marouani">
                <organization/>
            </author>
            <author initials="M. R." surname="Dagenais" fullname="M. R. Dagenais">
                <organization/>
            </author>
            <date year="2008"/>
        </front>
      </reference>
    </references>
  </back>
  
</rfc>